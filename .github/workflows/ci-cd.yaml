name: Java CI/CD

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/product-service:${{ steps.tag.outputs.TAG }}

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    - name: Set Kubeconfig
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path $env:USERPROFILE\.kube
        Set-Content -Path $env:USERPROFILE\.kube\config -Value "${{ secrets.KUBECONFIG }}"
        $env:KUBECONFIG = \"$env:USERPROFILE\\.kube\\config\"
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    - name: Check Helm version
      run: helm version
    - name: Deploy to Kubernetes with Helm
      run: |
        TAG=${{ steps.tag.outputs.TAG }}
        NAMESPACE=""
        RELEASE=""
        if [[ "$TAG" == "v1.0.0" ]]; then
          NAMESPACE="v1"
          RELEASE="product-v1"
        elif [[ "$TAG" == "v1.1.0" || "$TAG" == "v1-1.0" ]]; then
          NAMESPACE="v1-1"
          RELEASE="product-v1-1"
        elif [[ "$TAG" == "v2.0.0" ]]; then
          NAMESPACE="v2"
          RELEASE="product-v2"
        fi
        helm upgrade --install $RELEASE ./product-service-chart \
          --namespace $NAMESPACE --create-namespace \
          --set image.tag=$TAG \
          --set app.namespace=$NAMESPACE 