name: Java CI/CD

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/product-service:${{ steps.tag.outputs.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    - name: Set Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config
    - name: Deploy to Kubernetes
      run: |
        TAG=${{ steps.tag.outputs.TAG }}
        NAMESPACE=""
        if [[ "$TAG" == "v1.0.0" ]]; then
          NAMESPACE="v1"
          FILE="v1-deployment.yaml"
        elif [[ "$TAG" == "v1.1.0" ]]; then
          NAMESPACE="v1-1"
          FILE="v1.1-deployment.yaml"
        elif [[ "$TAG" == "v2.0.0" ]]; then
          NAMESPACE="v2"
          FILE="v2-deployment.yaml"
        fi
        sed -i "s|DOCKER_HUB_USERNAME/product-service:$TAG|${{ secrets.DOCKER_HUB_USERNAME }}/product-service:$TAG|g" k8s/$FILE
        kubectl apply -f k8s/$FILE -n $NAMESPACE
        kubectl apply -f k8s/v1-hpa.yaml -n v1
        kubectl apply -f k8s/v1.1-hpa.yaml -n v1-1
        kubectl apply -f k8s/v2-hpa.yaml -n v2
        kubectl apply -f k8s/ingress.yaml 